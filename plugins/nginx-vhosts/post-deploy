#!/usr/bin/env bash

source "$(dirname $0)/vars"

APP="$1"; PORT="$2"; INT_PORT="$3"
[[ "$INT_PORT" != "" ]] || INT_PORT="$APP_PORT"
WILDCARD_SSL="$DOKKU_ROOT/ssl"
SSL="$DOKKU_ROOT/$APP/ssl"

if [[ "$PORT" == "" ]] || [[ -f "$DOKKU_ROOT/$APP/NO_VHOST" ]]; then
  rm -f "$DOKKU_ROOT/$APP/nginx.conf"
  pluginhook nginx-pre-reload $APP
  sudo /etc/init.d/nginx reload > /dev/null
  exit 0
fi

hostnames_for_app "$APP"

http_host() {
  [[ $# -le 1 ]] && return

  DOKKU_LISTEN_IPV4="${DOKKU_LISTEN_IPV4:-*}"
  DOKKU_LISTEN_IPV6="${DOKKU_LISTEN_IPV6:-[::]}"
  SCHEME="$1"
  shift

  cat <<EOF
server {
EOF

  if [[ "$SCHEME" == "https" ]]; then
    cat <<EOF
  listen      $DOKKU_LISTEN_IPV6:443 ssl spdy;
  listen      $DOKKU_LISTEN_IPV4:443 ssl spdy;
  server_name $@;

  keepalive_timeout   70;
  add_header Alternate-Protocol 443:npn-spdy/2;

  ssl on;
  ssl_certificate     $SSL_INUSE/server.crt;
  ssl_certificate_key $SSL_INUSE/server.key;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!CAMELLIA;
  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  ssl_prefer_server_ciphers on;

EOF

  DOKKU_ENABLE_HSTS="$(config_get DOKKU_ENABLE_HSTS || true)"
  DOKKU_ENABLE_HSTS="${DOKKU_ENABLE_HSTS:-$DOKKU_FORCE_ENABLE_HSTS}"

  if [[ -n "$DOKKU_ENABLE_HSTS" ]] && [[ -z "$DOKKU_ENABLE_HTTP_HOST" ]]; then
    cat <<EOF
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

EOF
  fi

  else
    cat <<EOF
  listen      $DOKKU_LISTEN_IPV6:80;
  listen      $DOKKU_LISTEN_IPV4:80;
  server_name $@;

EOF
  fi

  cat <<EOF
  location    / {
    proxy_pass  http://$APP;
EOF

  if [[ -f "$APP_DIR/htpasswd" ]]; then
    cat <<EOF
    auth_basic "closed website";
    auth_basic_user_file "$APP_DIR/htpasswd";
EOF
    fi

  for host in "$@";
  do
    cat <<EOF
    proxy_redirect http://$host:$INT_PORT/ http://$host/;
EOF
  done

  cat <<EOF
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
EOF

  if [[ -z "$DOKKU_DISABLE_NGINX_X_FORWARDED" ]]; then
    cat <<EOF
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
EOF
  fi

  cat <<EOF
  }
}
EOF
}

http_redirect() {
  [[ $# -le 1 ]] && return

  SCHEME="$1"
  shift

  cat<<EOF
server {
  listen      $DOKKU_LISTEN_IPV6:80;
  listen      $DOKKU_LISTEN_IPV4:80;
  server_name $@;
  return 302 $SCHEME://$hostname\$request_uri;
}
EOF
}

cat<<EOF > $DOKKU_ROOT/$APP/nginx.conf
upstream $APP { server 127.0.0.1:$PORT; }
EOF

if [[ "$hostname" != "" ]]; then
  if [[ -f "$SSL/server.crt" ]] && [[ -f "$SSL/server.key" ]]; then
    SSL_INUSE="$SSL"
  elif  [[ -f "$WILDCARD_SSL/server.crt" ]] && [[ -f "$WILDCARD_SSL/server.key" ]] && [[ $hostname = `openssl x509 -in $WILDCARD_SSL/server.crt -noout -subject | tr '/' '\n' | grep CN= | cut -c4-` ]]; then
    SSL_INUSE="$WILDCARD_SSL"
  fi

  # ssl based nginx.conf
  if [[ -n "$SSL_INUSE" ]]; then
    DOKKU_ENABLE_HTTP_HOST=$(config_get DOKKU_ENABLE_HTTP_HOST || true)
    if [[ -n "$DOKKU_ENABLE_HTTP_HOST" ]]; then
      http_host http ${hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf
      http_redirect https ${redirect_hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf # we prefer https over http
    else
      http_redirect https ${hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf
      http_redirect https ${redirect_hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf
    fi
    http_host https ${hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf

    echo "https://$hostname" > "$DOKKU_ROOT/$APP/URL"
  else
    # default nginx.conf
    http_host http ${hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf
    http_redirect http ${redirect_hostnames[@]} >> $DOKKU_ROOT/$APP/nginx.conf

    echo "http://$hostname" > "$DOKKU_ROOT/$APP/URL"
  fi

  pluginhook nginx-pre-reload $APP
  sudo /etc/init.d/nginx reload > /dev/null
fi
